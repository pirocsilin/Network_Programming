<!DOCTYPE html>
<html lang="en">

<head>

  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="">
  <meta name="author" content="do.sibsutis.ru">

  <title>ТЕМА 5. Конспект лекций</title>
	
	<link rel="icon" type="image/png" href="../lib/css/favicon.png">
  <!-- Bootstrap Core CSS -->
  <link href="../lib/css/bootstrap.css" rel="stylesheet">
	
  <!-- Custom CSS -->
  <link href="../lib/css/scrolling-nav.css" rel="stylesheet">

  <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
  <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
  <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
    <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
  <![endif]-->
</head>

<!-- The #page-top ID is part of the scrolling feature - the data-spy and data-target are part of the built-in Bootstrap scrollspy function -->

<body id="page-top" data-spy="scroll" data-target=".navbar-fixed-top">
  <!-- Navigation -->
<nav class="navbar navbar-default navbar-fixed-top">
 <div class="container">
  <!-- Brand and toggle get grouped for better mobile display -->
  <div class="navbar-header">
   <li class="hidden"> <a class="page-scroll" href="#page-top"></a> </li>
	 
	 <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
    <span class="icon-bar"></span>
    <span class="icon-bar"></span>
    <span class="icon-bar"></span>
   </button>
	 
   <a class="navbar-brand " href="../index.htm"> 
  <text class = "hidden-xs">Сетевое программирование</text> 
  <text class = "visible-xs">СП</text>
	 </a>
  </div>

  <!-- Collect the nav links, forms, and glyphicon glyphicon-list-alt content for toggling -->
  <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
   
	 <!-- <ul class="nav navbar-nav">
		<li><a href="#"></a></li> 
   </ul> -->
	
   <ul class="nav navbar-nav navbar-right">
    <li class="dropdown">
		<button type="button" class="navbar-toggle dropdown-toggle hidden-xs" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
			<span class="icon-bar"></span>
			<span class="icon-bar"></span>
			<span class="icon-bar"></span>
		</button>	   
		<a class = "dropdown-toggle visible-xs" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Материалы</a>
     <ul class="dropdown-menu">
<li><a href="../index.htm">Аннотация курса</a></li>

      <li role="separator" class="divider"></li>
    
  <li><a href="lec_index.htm">Теория</a></li>
   
   <li><a href="c_work.htm">Курсовая работа</a></li>
 
<li><a href="labs.htm">Лабораторные работы</a></li> 
    <li role="separator" class="divider"></li>
  
    
    <li><a href="lit.htm">Литература</a></li>
 
      <!--li><a href="q.htm">Вопросы для самопроверки</a></li-->			
     </ul>
 </li>
 </ul>
  </div><!-- /.navbar-collapse -->
 </div><!-- /.container-fluid -->
</nav>


  <div id="intro" class="section content-section ">
    <div class="container">
       <div class="row">
        <div class="col-lg-12">	


<!-- содержание -->	
<div class="page-header">				
<h3><a href="#">ТЕМА 5.  ПРОТОКОЛЫ УРОВНЯ ПРИЛОЖЕНИЙ – БАЗОВЫЕ СЕТЕВЫЕ СЕРВИСНЫЕ CЛУЖБЫ</a></h3>
<a href="#1" class=punkt>5.1. Telnet – протокол удалённого доступа </a><br>
<a href="#2" class=punkt>5.2. FTP– протокол перемещения файлов </a><br>
<a href="#3" class=punkt>5.3. Программы анализа сети netstat, ping, traceroute </a><br>
<a href="#4" class=punkt>5.4. Протокол ARP </a><br>
</div>
<!--начало-->
<p>Cтруктура сетевого программного обеспечения в произвольном компьютере сети состоят из набора протоколов уровня приложений.</p>
<p><img src="img/image027.gif"></p>
<p>Рис.5.1. Примерная структура сетевого ПО</p>
<br>
<p>Сокращения, используемые в структуре программного обеспечения на рисунке 5.1 следующие:</p>
<p class=punkt>HTTP – Hyper Text Transfer Protocol;</p>
<p class=punkt>Telnet – Network Terminal Protocol – обеспечивает удалённый доступ через сеть;</p> 
<p class=punkt>FTP – File Transfer Protocol – используется для доставки файлов;</p>
<p class=punkt>SMTP – Simple Mail Transfer Protocol – обеспечивает E-mail; </p>
<p class=punkt>DNS – Domain Name Service – установление соответствия IP-адресов с именами сетевых устройств;</p>
<p class=punkt>RIP – Routing Information Protocol – маршрутизатор – центральный элемент работы TCP/IP – сети;</p>
<p class=punkt>NFS – Network File System – протокол позволяет распределять файлы по различным хостам сети.</p>
<p class=punkt>HTTP, Telnet, FTP, SMTP – всегда используются пользователями, а о например RIP он даже не подозревает его существования. Это для администратора. Лежат на UDP,  в отличие от FTP … </p>
<p class=punkt>EGP – Exterior Gateway Protocol – другой протокол маршрутизации непосредственно использует IP</p>
<p class=punkt>ARP – Address Resolution Protocol (IP → Ethernet-адрес)</p>
<br>
<p>Часть прикладных программ, таких как FTP или Telnet могут быть использованы, если пользователь знает адреса и характеристики сети.</p>
<p>Другие протоколы вроде RIP выполняются даже когда пользователь не подозревает об их существовании. Эти программы управляются только системным администратором.</p>
<p>По рисунку видим сложность и иерархию протоколов в обычной рабочей машине сети. Конечно, не все из показанных протоколов находятся в машине.</p>
<p>Такие протоколы как FTP, HTTP  непосредственно связаны с транспортным протоколом TCP, а протоколы RIP и DNS с UDP. </p> 
<br>
<a name=1 class="anchor"></a>
<h3>5.1. Telnet – протокол удалённого доступа </h3>
<p>Используется для удалённого подключения в другие компьютеры сети Internet. Обеспечивает доступ к множеству открытых серверов. Он позволяет, после установки связи, пользоваться всеми средствами, которые удалённый компьютер представляет своим локальным терминалам, так, словно удаленный терминал является локальным терминалом этого компьютера.</p>
<p>Формат команды установления связи:</p>
<p class=punkt>>telnet имя_удалённого_компьютера [IP-адрес]</p>
<p>Например, выполним удаленное подключение к серверу nsc.ru:</p>
<p class=punkt>>telnet nsc.ru</p>
<p class=punkt> Trying …</p>
<p class=punkt>Connect to nsc.ru</p>
<p class=punkt>Login: alex</p>
<p class=punkt>Password:</p>
<p class=punkt>Last login: Mon April 14 14:54:35 from cyber_nt.neic.su</p>
<p class=punkt>></p>
<br>
<p>Прикладная программа состоит из двух взаимодействующих между собой компонентов: программы-клиента, которая выполняется на компьютере, запрашивающем обслуживание, и программы-сервера, которая выполняется на компьютере, предоставляющем эту услугу.</p>
<p>Сеть реализующая средства протоколов TCP и UDP, является средой, через которую эти программные модули взаимодействуют между собой.</p>
<p>Программа-клиент выполнит следующие действия после набора команд telnet:</p>
<ul>
<li>	установить сетевое соединение с сервером посредством протокола TCP;</li>
<li>	принять от пользователя входные данные;</li>
<li>	преобразовать данные и передать их серверу;</li>
<li>	принять от сервера входные данные;</li>
<li>	переформатировать данные для отображения на экране.</li>
</ul>
<p>Программа-сервер соответственно выполнит следующие функции:</p>
<ul>
<li>	ожидает запроса в стандартной форме;</li>
<li>	обслуживает этот запрос;</li>
<li>	посылает результаты обратно программе-клиенту;</li>
<li>	ожидает следующий запрос.</li>
</ul>
<p>Сервер TELNET использует порт номер 23. Клиент TELNET может получать услуги от сервера, если установит соединение с TCP-портом 23 на егомашине.</p>
<p>Основные команды, выполняемые при помощи программы telnet, являются команды программной оболочки, например:</p>
<p class=punkt>cd  имя – перейти в директорию с именем;</p>
<p class=punkt>dir – отобразить содержимое текущей директории;</p>
<p class=punkt>run имя – запустить в работу исполнительный файл;</p>
<p class=punkt>exit – выход.</p>
<br>
<p>Так как с помощью команды telnet вы становитесь пользователем удалённого хоста, то может использовать все стандартные команды ОС установленные на этой машине. Например, если это UNIX, то может использовать ls, pwd и др.</p>
<p>Можно использовать программу telnet в роли другого клиента. В случае установления соединения через другой порт. Этот метод используется для отладки. </p>
<p>Например, можно зайти в собственную машину, как внешний клиент в обслуживание программы почты через порт 110 (110 – порт почтовой службы):</p>
<p class=punkt>telnet cyber_nt 110.</p>
<p>В этой точке можно ввести команды почтовой службы и посмотреть, работает ли она нормально. </p>
<p>Выход из программы telnet осуществляется командой quit. </p>
<br>
<a name=2 class="anchor"></a>
<h3>5.2. FTP– протокол перемещения файлов </h3>
<p>Протокол FTP (file transfer protocol) предназначен главным образом для приёма файла или группы файлов из удаленного компьютера и для передачи файла или группы файлов в удалённый компьютер. Сервер FTP использует порт номер 21. Клиент FTP может получать услуги от сервера, если установит соединение с TCP-портом 21 на егомашине.</p>
<p>Если оба компьютера используют язык протокола FTP, то не имеет значения, в каких ОС они работают.</p>
<p>Формат установления соединения: </p>
<p class=punkt>>ftp имя_удалённого_компьютера [IP-адрес]</p>
<p>Например, выполним следующее</p>
<p class=punkt>>ftp ftp.nsu.ru</p>
<p>Существует два вида доступа в удаленной машине: </p>
<p>-	авторизованный, когда у вас есть доступ (имя пользователя или пароль);</p>
<p>-	анонимный, когда вы подключаетесь как гость; при этом используется в качестве имени слово anonimous, а в качестве пороля можете указать свой e-mail.</p>
<p>Реализация FTP процедур состоит из выполнения команд FTP и передачи данных. Данные занимают в среднем 40% всего сетевого трафика, в то время как команды только 4%.</p>
<p>FTP позволяет переслать данные в файлах, либо как двоичную информацию, либо как ASCII (то есть текст). </p>
<p>FTP так же позволяет вести поиск файла на удалённой машине, то есть переходить из директории в директорию и просматривать содержимое этих директорий, файлов.</p>
<p>FTP позволяет пересылать как отдельные файлы так и группы файлов.</p>
<br>
<p>Рассмотрим основные команды, используемые в FTP:</p>
<p>Таблица 5.1.</p>
<p><img src="img/image028.gif"></p>
<p>В большинстве реализаций ftp имеет 70-80 команд, естественно, что приведённый список является сокращённым.</p>
<p>Все команды ftp является UNIX-подобными, следовательно, если даже вы вошли в ftp-сервер в DOS, то всё равно выполняете по правилам UNIX, то есть путь прописываете </p>
<p class=punkt>ftp>cd h:/public/ibm/ms_dos, а не h:\public\ibn\ms.dos. Иначе это будет ошибка.</p>
<br>
<a name=3 class="anchor"></a>
<h3>5.3.  Программы анализа сети netstat, ping, traceroute </h3>
<p><b>5.3.1. Команда netstat </b></p>
<p>Команда netstat выдаёт различную информацию о состоянии сети. Она используется во всех системах (UNIX, OS/2, WinNT, Win95) и используется для: </p>
<ul class=punkt>
<li>	проверки состояния сетевых соединений,</li>
<li>	анализа информации о конфигурации интерфейсов,</li>
<li>	изучения таблицы маршрутов,</li>
<li>	изучения статистических данных о различных сетевых протоколах.</li>
</ul>
<p>Утилита netstat позволяет отслеживать процесс соединения с удалёнными системами, отображать статистику протокола по данному соединению. Позволяет получать IP-адреса для систем, соединение с которыми было осуществлено по доменным именам. Ниже приводится синтаксис для вызова утилиты:</p>
<ul class=punkt>
<li>	a отображать информацию обо всех соединениях и портах. По умолчанию эта информация не отображается.</li>
<li>	e отображению статистики Ethernet. Целесообразно использовать эту опцию совместно с -s (см. ниже). </li>
<li>	p отображает соединение для протокола, указанного в качестве параметра соединения. Протокол может принимать значения tcp и udp. В случае использования этой опции совместно с -s дополнительно можно указывать протокол IP.</li>
<li>	n эта опция приводит к отображению статистики протоколов. По умолчанию отображается статистика для протоколов tcp, udp, ICMP, IP.</li>
</ul>
<p>Можно указать интервал в секундах обновления выдаваемой netstat информации. Остановка вывода информации на экран по Ctrl+C. Если не указать значение интервала, то утилита выведет требуемую информацию только один раз.</p>
<p>Для определения адреса IP удалённого компьютера используется утилита netstat с опцией –n. </p>
<p><img src="img/image029.gif"></p>
<p>Программа netstat без аргументов выдаёт информацию о состоянии активных портов TCP и UDP.</p>
<p>Аргументы:</p>
<p class=punkt>	-a информация о всех (и не активных гнёздах);
<p class=punkt>	-i  статическая информация о сетевых устройствах;
<p class=punkt>	netstat –i (аналог ipconfig);
<p class=punkt>	etho – информация о сетевой(ых) карте(ах) IP-адресах;
<p class=punkt>	-c непрерывно (каждую секунду) выдаёт информацию о состоянии системы, пока работа программы не была прервана;
<p class=punkt>	-n выдаёт IP-адреса локальных и удалённых систем;
<p class=punkt>	-o – информацию о количестве повторно переданных байтив и состоянии таймера;
<p class=punkt>	-r выдаёт хранящийся в ядре таблицы маршрут;
<p class=punkt>	-t – только о TCP-гнёздах, включая;
<p class=punkt>	-u – UDP гнездах;
<p class=punkt>	-v – о версии;
<p class=punkt>	-p <имя протокола> – IP, TCP, UDP, ICMP.

<p>Программа netstat может выдавать статистическую информацию о том или ином интерфейсе, относящуюся к регулярно следующим интервалам времени. Для запроса этой функции необходимо задать в командной строке требуемое количество секунд между отсчётами.</p>
<p>Команда netstat –r –n 3 – выдаёт таблицу маршрутизации ядра с интервалом 3 секунды. Например, в результате netstat –r –n  на машине 194.226.178.27:</p>
<p>Таблица 7.4.</p>
<p><img src="img/image030.gif"></p>
<p>Непрерывный режим работы программы netstat особенно эффективен при выслеживании источника ошибок. </p>
<p>Команда netstat –s выдаёт содержимое счётчиков, разбросанных по сетевым программам. В выходной информации есть разделы, относящиеся к различным протоколам: IP, ICMP, TCP и UDP. Например, выделить статистическую информацию о конкретном протоколе. Вы можете с помощью опции –s –p <имя протокола>.</p>
<p>Например, netstat –s –p.</p>
<p>При этом на экране или в файле, если вы запишите, информация выглядит следующим образом:</p>
<p><img src="img/image031.gif"></p>
<p><b>5.3.2. Трассировка или отслеживание IP пакетов</b></p>
<p>- производится с помощью команды traceroute, разработанной для системы UNIX. В Windows эта команда включена под именем tracert.</p>
<p><b><i>Traceroute</i></b> позволяет выявлять последовательность шлюзов, через которую проходит IP – пакет на пути к пункту назначения. Синтаксис команды:</p>
<p class=punkt>Traceroute <имя машины>; для UNIX</p>
<p class=punkt>Tracert <имя машины>; для Windows</p>
<p>Имя машины может быть задано в символьной или числовой форме. Выходная информация – простой список машин, начиная с первого шлюза и кончая пунктом назначения. Например, проследим путь до Московского государственного университета:</p>
<p><img src="img/image032.gif"></p>
<p><b>5.3.3 Ping – диагностика соединений</b></p>
<p><b><i>Ping</i></b> представляет собой диагностическую утилиту, проверяющую возможность соединения с одним или несколькими удалёнными хост-компьютерами. Ping посылает пакеты данных удалённому хост-компьютеру, который возвращает их назад. Если пакет за определённое время не возвращается назад, то либо хост-компьютер недоступен, либо что-то случилось с соединением. Ping позволяет выяснить, исправно ли соединение с удалённой системой.</p>
<p>  По умолчанию Ping  отправляет четыре пакета данных. Можно указать произвольное число пакетов, или отправлять пакеты непрерывно до завершения выполнение команды по Ctrl+C. </p>
<p>Синтаксис утилиты ping:</p>
<p><i>Ping [-t] [-a] [-n count] [-1 size] [-f] [-I TTL] [-v TOS]</i></p>
<p> Опции утилиты ping:</p>
<p class=punkt>	-t. При указании этой опции посылка пакетов данных удалённому хост-компьютеру осуществляется до тех пор пока работа утилиты не будет прервана пользователем с помощью ввода Ctrl + C.</p>
<p class=punkt>	-n count. По умолчанию Ping отправляет удалённому хост-компьютеру четыре пакета данных протокола ICMP. С помощью данной опции можно указать произвольное число пакетов count.</p>
<p class=punkt>	-1 size. Опция –1 используется для изменения размера пакетов данных.</p>
<br>
<a name=4 class="anchor"></a>
<h3>5.4. Протокол ARP </h3>
<p>Протокол ARP (Address Resolution Protocol) – адресный протокол используемый для отображения IP-адресов в Ethernet-адреса. Отображение выполняется только для отправляемых IP-пакетов, так как только в момент отправки создаются заголовки IP и Ethernet.</p>
<p><i>ARP-таблица для преобразования адресов </i></p>
<p>Преобразование адресов выполняется путем поиска в таблице. Эта таблица, называемая ARP-таблицей, хранится в памяти и содержит строки для каждого узла сети. В двух столбцах содержатся IP- и Ethernet-адреса.Если требуется преобразовать IP-адрес в Ethernet-адрес, то ищется запись с соответствующим IP-адресом. Ниже приведен пример упрощенной ARP-таблицы.</p>
<p><img src="img/image033.gif"></p>
<p>Табл.7.5. Пример ARP-таблицы</p>
<p>Принято, чтобы все байты 4-байтного IP-адреса записывать десятичными числами, разделенными точками. При записи 6-байтного Ethernet-адреса каждый байт указывается в 16-ричной системе и отделяется двоеточием. ARP-таблица необходима потому, что IP-адреса и Ethernet-адреса выбираются независимо, и нет какого-либо алгоритма для преобразования одного в другой. IP-адрес выбирает менеджер сети с учетом положения машины в сети Internet. Если машину перемещают в другую часть сети Internet, то ее IP-адрес должен быть изменен. Ethernet-адрес выбирает производитель сетевого интерфейсного оборудования из выделенного для него по лицензииадресного пространства. Когда у машины заменяется плата сетевого адаптера, то меняется и ее Ethernet-адрес</p>
<p><i>Порядок преобразования адресов</i></p>
<p>В ходе обычной работы сетевая программа, такая как TELNET, отправляет прикладное сообщение, пользуясь транспортными услугами TCP. МодульTCP посылает соответствующее транспортное сообщение через модуль IP. Врезультате составляется IP-пакет, который должен быть передан драйверу Ethernet. IP-адрес места назначения известен прикладной программе, модулю TCP и модулю IP. Необходимо на его основе найти Ethernet-адрес места назначения. Для определения искомого Ethernet-адреса используетсяARP-таблица.</p>
<p><i>Запросы и ответы протокола ARP</i></p>
<p>ARP-таблица заполняется автоматически модулем ARP, по мере необходимости. Когда с помощью существующей ARP-таблицы не удается преобразовать IP-адрес, то происходит следующее:</p>
<p>1)	По сети передается широковещательный ARP-запрос.</p>
<p>2)	Исходящий IP-пакет ставится в очередь.
</p>
<p>Каждый сетевой адаптер принимает широковещательные передачи. Вседрайверы Ethernet проверяют поле типа в принятом Ethernet-кадре и передают ARP-пакеты модулю ARP. ARP-запрос можно интерпретировать так: "Если ваш IP-адрес совпадает с указанным, то сообщите мне ваш Ethernet-адрес".Пакет ARP-запроса выглядит примерно как в таблице 5.2.</p>
<p>Таблица 5.2.</p>
<p><img src="img/image034.gif"></p>
<p>Каждый модуль ARP проверяет поле искомого IP-адреса в полученном ARP-пакете и, если адрес совпадает с его собственным IP-адресом, то посылает ответ прямо по Ethernet-адресу отправителя запроса. Пакет с ARP-ответом показан в таблице 5.3.</p>
<p>Таблица 5.3.</p>
<p><img src="img/image035.gif"></p>
<p>Этот ответ получает машина, сделавшая ARP-запрос. Драйвер этой машины проверяет поле типа в Ethernet-кадре и передает ARP-пакет модулю ARP. Модуль ARP анализирует ARP-пакет и добавляет запись в свою ARP-таблицу.Обновленная ARP-таблица после обработки ответа выглядит на таблице 5.4.</p>
<p>Таблица 5.4.</p>
<p><img src="img/image036.gif"></p>

<br><br>
<!--конец-->
      
				

				</div>
			</div>
			
      </div>
    </div>
  </div>
	
	<!--Меню навигации по Темам -->	
	<div aria-label="..." class = "nav-menu">
	 <ul class="pager background-transition-slow">
		 <li title="Наверх" style = "margin-right:15px;	"><a class = "glyphicon glyphicon-menu-up page-scroll" href="#page-top"></a></li>
		 <li title="К предыдущей лекции"><a class = "glyphicon glyphicon-menu-left page-scroll" href="lec4.htm"></a></li>
		 <li title="В содержание"><a class = "glyphicon glyphicon-list-alt" href="lec_index.htm"></a></li>
		 <li title="К следующей лекции"><a class = "glyphicon glyphicon-menu-right page-scroll" href="lec6.htm"></a></li>
	 </ul>
	</div>
	<!---->
	
	</div>
  <!-- jQuery -->
  <script src="../lib/js/jquery.js"></script>

  <!-- Bootstrap Core JavaScript -->
  <script src="../lib/js/bootstrap.min.js"></script>

  <!-- Scrolling Nav JavaScript -->
  <script src="../lib/js/jquery.easing.min.js"></script>
  <script src="../lib/js/scrolling-nav.js"></script>

</body>

</html>
